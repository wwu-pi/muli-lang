aspect FreeVariablesAttribute {
  class FreeVariablesAttribute extends Attribute {
    public FreeVariablesAttribute(ConstantPool cp, Collection<FreeVariableDeclarator> vars) {
      super(cp, "FreeVariables");

      FreeVariableStore fvs = new FreeVariableStore(cp);
      for (FreeVariableDeclarator v : vars) {
        fvs.addFreeVariableEntry(v.name(), v.localNum());
      }

      u2(fvs.freeVariables.size());
      for (FreeVariableStore.FreeVariableEntry e : fvs.freeVariables) {
        u2(e.name_index); // Retained for debugging purposes
        u2(e.index); // Method-specific identifier
      }
    }
  }



  // refine from Java5 AnnotationsCodegen, where RuntimeVisibleAnnotations and RuntimeInvisibleAnnotations where added
  // refine from Java5 GenericsCodegen, where method type signatures were added
  refine GenericsCodegen eq MethodDecl.attributes() {
    Collection<Attribute> attributes = refined();
    attributes.add(new FreeVariablesAttribute(hostType().constantPool(), freeVariablesColl()));
    return attributes;
  }

  // refine from Java5 AnnotationsCodegen, where RuntimeVisibleAnnotations and RuntimeInvisibleAnnotations where added
  refine AnnotationsCodegen eq ConstructorDecl.attributes() {
    Collection<Attribute> attributes = refined();
    attributes.add(new FreeVariablesAttribute(hostType().constantPool(), freeVariablesColl()));
    return attributes;
  }
}